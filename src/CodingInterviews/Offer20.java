package CodingInterviews;

/*
from https://blog.csdn.net/itlwc/article/details/10145987
.
	任意一个字符
X?
	表示X可以出现0次或者1次
?
	如果在?,+,*,{n},{m,n},{n,}后面,表示次数按非贪婪模式进行匹配,
		即按照匹配模式进行最小限度的匹配
X+
	表示X可以出现1次或者多次
X*
	表示X可以出现任意次
X{n}
	表示X可以出现n次
X{m,n}
	表示X可以最少出现m次,最多出现n次
X{n,}
	表示X最少出现n次

[ ]
	匹配中括号中任意一个字符
[^ ]
	匹配中括号中字符之外的任意一个字符
\d
	表示0~9之间的任意一个数字字符,即[0-9]
\s
	表示空格,制表符,换页符等空白字符的任意一个
\S
	表示空白字符以外的任意一个字符,即[^\s]
\w
	表示字母,数字,下划线中的任意一个字符,即[a-zA-Z_0-9]
\W
	表示字母,数字,下划线以外的任意一个字符,即[^a-zA-Z_0-9]
^
	该符号不匹配任何字符,字符串开始的位置,即^h必须以h开头
$
	该符号不匹配任何字符,字符串结束的位置,即r$必须以r结尾
|
	用来连接两个表达式,表示或的关系
	X|Y 表示X或者Y中的任意字符
\
	转义字符,当一个符号自身有意义而又要表示这个字符的时候,就需要转义
	\^表示^,\$表示$
 */
public class Offer20 {
    public boolean isNumber(String s) {
        s = s.trim();
        // return s.matches("\\s*[+-]?((\\d+)|(\\d*\\.\\d+)|(\\d+\\.\\d*))([eE][+-]?\\d+)?\\s*");
        return s.matches("[+-]?((\\d+)|(\\d*\\.\\d+)|(\\d+\\.\\d*))([eE][+-]?\\d+)?");
    }
}
